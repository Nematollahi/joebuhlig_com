<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
xmlns:content="http://purl.org/rss/1.0/modules/content/"
xmlns:wfw="http://wellformedweb.org/CommentAPI/"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:atom="http://www.w3.org/2005/Atom"
xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
xmlns:rawvoice="http://www.rawvoice.com/rawvoiceRssModule/"
>

<channel>
<title>Joe Buhlig</title>
<atom:link href="http://joebuhlig.com/feed/" rel="self" type="application/rss+xml" />
<link>http://joebuhlig.com</link>
<description>leverage the digital and welcome real life
</description>
<lastBuildDate>Fri, 21 Oct 2016 09:03:28 -0500</lastBuildDate>
<language>en-US</language>
<sy:updatePeriod>hourly</sy:updatePeriod>
<sy:updateFrequency>1</sy:updateFrequency>
<generator>http://jekyllrb.com/</generator>

<item>
    <title><![CDATA[Discourse Commenting for Jekyll]]></title>
    <link>http://joebuhlig.com/discourse-commenting-for-jekyll/</link>
    <pubDate>Fri, 21 Oct 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[discourse]]></category>

    <category><![CDATA[jekyll]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/discourse-commenting-for-jekyll/</guid>
    <description>
        <![CDATA[For years, Disqus has been the commenting platform of choice. It’s what I used when my site was on WordPress. When I switched to a static site generated by Jekyll, I pulled commenting entirely. But given the topics I write about, comments can be quite helpful and I realize that...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/discourse-commenting-for-jekyll.jpg" /><p>For years, Disqus has been the commenting platform of choice. It’s what I used when my site was on WordPress. When I switched to a static site generated by <a href="http://jekyllrb.com/">Jekyll</a>, I pulled commenting entirely. But given the topics I write about, comments can be quite helpful and I realize that was a mistake. So I brought them back with the help of <a href="http://www.discourse.org/">Discourse</a>.
<!--more--></p>

<p>There are a number of reasons I chose Discourse, but suffice it to say that I just like it better than the alternatives, which are actually few in number for static sites. I have a unique way of doing the embed process that I thought other Jekyll users might find helpful.</p>

<h2 id="the-discourse-side">The Discourse Side</h2>

<p>Assuming you have an instance of Discourse running (not the purpose of this post) and you are an admin on said instance, you add the host site as an allowed host in the Discourse settings (Customize → Embedding). That will generate the code you need to embed on each page you want commenting enabled. You’ll have to change the embed URL within the code to match the canonical URL of the page it’s embedded on. This is what it looks like originally:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">'discourse-comments'</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
  <span class="nx">DiscourseEmbed</span> <span class="o">=</span> <span class="p">{</span> <span class="na">discourseUrl</span><span class="p">:</span> <span class="s1">'http://discussion.joebuhlig.com/'</span><span class="p">,</span>
                     <span class="na">discourseEmbedUrl</span><span class="p">:</span> <span class="s1">'REPLACE_ME'</span> <span class="p">};</span>

  <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">'script'</span><span class="p">);</span> <span class="nx">d</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">'text/javascript'</span><span class="p">;</span> <span class="nx">d</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="nx">d</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">DiscourseEmbed</span><span class="p">.</span><span class="nx">discourseUrl</span> <span class="o">+</span> <span class="s1">'javascripts/embed.js'</span><span class="p">;</span>
    <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'head'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'body'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span>
  <span class="p">})();</span>
<span class="nt">&lt;/script&gt;</span></code></pre></figure>

<h2 id="the-jekyll-side">The Jekyll Side</h2>

<p>This can’t get more basic. Paste the code from Discourse to the bottom of the post layout in Jekyll. After I make the edit for the embed URL, this is what the code looks like:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">'discourse-comments'</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
  <span class="nx">DiscourseEmbed</span> <span class="o">=</span> <span class="p">{</span> <span class="na">discourseUrl</span><span class="p">:</span> <span class="s1">'http://discussion.joebuhlig.com/'</span><span class="p">,</span>
                     <span class="na">discourseEmbedUrl</span><span class="p">:</span> <span class="s1">'{{site.url}}{{page.url}}'</span> <span class="p">};</span>

  <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">'script'</span><span class="p">);</span> <span class="nx">d</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">'text/javascript'</span><span class="p">;</span> <span class="nx">d</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="nx">d</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">DiscourseEmbed</span><span class="p">.</span><span class="nx">discourseUrl</span> <span class="o">+</span> <span class="s1">'javascripts/embed.js'</span><span class="p">;</span>
    <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'head'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'body'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span>
  <span class="p">})();</span>
<span class="nt">&lt;/script&gt;</span></code></pre></figure>

<h2 id="development-tweaks">Development Tweaks</h2>

<p>Every change I make to the site is previewed before deployment. Each post is reviewed as well. So it’s quite normal for me to run <code class="highlighter-rouge">jekyll s --future</code>. But I don’t want any issues with the embed code when I’m in my development environment, so I tell Jekyll to only add the embed code when the site is being created for production:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html">{% if jekyll.environment == "production" %}
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">'discourse-comments'</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
  <span class="nx">DiscourseEmbed</span> <span class="o">=</span> <span class="p">{</span> <span class="na">discourseUrl</span><span class="p">:</span> <span class="s1">'http://discussion.joebuhlig.com/'</span><span class="p">,</span>
                     <span class="na">discourseEmbedUrl</span><span class="p">:</span> <span class="s1">'{{site.url}}{{page.url}}'</span> <span class="p">};</span>

  <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">'script'</span><span class="p">);</span> <span class="nx">d</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">'text/javascript'</span><span class="p">;</span> <span class="nx">d</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="nx">d</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">DiscourseEmbed</span><span class="p">.</span><span class="nx">discourseUrl</span> <span class="o">+</span> <span class="s1">'javascripts/embed.js'</span><span class="p">;</span>
    <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'head'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'body'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span>
  <span class="p">})();</span>
<span class="nt">&lt;/script&gt;</span>
{% endif %}</code></pre></figure>

<p>Now when I’m ready to deploy my changes I run <code class="highlighter-rouge">JEKYLL_ENV=production jekyll b</code>. That sets the environment variable to production instead of development and means the embed code is only included when I’m building the site for real. I use the same trick for my Piwik tracking code. It keeps my external dependencies from creating issues while I am developing.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Digging Into Alfred Remote]]></title>
    <link>http://joebuhlig.com/digging-into-alfred-remote/</link>
    <pubDate>Mon, 17 Oct 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[alfred]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/digging-into-alfred-remote/</guid>
    <description>
        <![CDATA[Alfred is a tool I use hundreds of times a day without realizing it. I’m not sure why it took me so long to pick up Alfred Remote for my phone, but I’m now seeing the potential for some really advanced triggering for my Mac.

]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/digging-into-alfred-remote.jpg" /><p>Alfred is a tool I use hundreds of times a day without realizing it. I’m not sure why it took me so long to pick up <a href="https://itunes.apple.com/us/app/alfred-remote/id927944141?mt=8&amp;at=1l3vnyQ">Alfred Remote</a> for my phone, but I’m now seeing the potential for some really advanced triggering for my Mac.
<!--more--></p>

<p>I’ve written before about my use of Alfred for <a href="http://joebuhlig.com/mac-navigation/">navigating applications on my Mac</a>. Remote takes it another step by allowing me to show/hide a program from my phone. At first, I was concerned there might be a bit of lag in activating the action but that fear was immediately eradicated. It’s an instant switch and often happens before my eyes make it back to the Mac.</p>

<p>As an app switcher, Remote is awesome. And given different pages of actions, I can set up different work modes since different tasks require different apps. Take podcasting as an example. Keeping my audio programs and notes a tap away makes recording seamless. But I don’t use some of those applications at any other time, so I keep that set up as a different page in Remote.</p>

<p>This app launching structure is invaluable for webinars and screencasting. It drives me crazy when I watch someone’s screen and they need to search for an open document or program. Or if I’m recording a screencast, this allows me to eliminate the need for fades across screens and lets me jump right into the next window.</p>

<p>Outside of app switching, I use Remote for opening sites I have bookmarked and my most frequent file folders. This works the same way as app launching. Remote opens them immediately on the Mac.</p>

<p>Where I think Remote has power that I have yet to realize is in scripting. I do this with Spotify to get a play/pause button but that’s as far as I’ve gotten. It’s possible to create some sophisticated workflows that can then be launched from Remote. This means you could run some OmniFocus AppleScripts, hide unwanted apps, open other apps, empty the trash, and more with a single tap. Again, I haven’t gone this route yet, but I can see a lot of potential for Remote that I hadn’t considered.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Converting Drafts Text to Title Case]]></title>
    <link>http://joebuhlig.com/converting-drafts-text-to-title-case/</link>
    <pubDate>Fri, 14 Oct 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[drafts]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/converting-drafts-text-to-title-case/</guid>
    <description>
        <![CDATA[Drafts is easily one of the most used apps on my phone. To me, it is the pinnacle of resistance-free digital capture. If I look through my list of processed drafts, the most common forms of text I capture are content ideas and book suggestions. This tells me I read,...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/converting-drafts-text-to-title-case.jpg" /><p>Drafts is easily one of the most used apps on my phone. To me, it is the pinnacle of resistance-free digital capture. If I look through my list of processed drafts, the most common forms of text I capture are content ideas and book suggestions. This tells me I read, write, and record a lot. 
<!--more--></p>

<p>I like my placeholders for these new ideas to be uniform. In this case that means each content idea - whether it’s a blog post idea or a new video - is captured as the title I would use for the content itself.</p>

<p>But let’s be serious, I hate hitting the shift key at the beginning of every new word and I’m terrible at remembering which words should be capitalized and which should remain lowercase.</p>

<p>Knowing the power of Drafts, I asked if it were possible for my capture tool to handle this for me. That question led me to <a href="http://leancrew.com/all-this/2015/06/title-case-in-drafts/">an article about title case</a> and JavaScript by the always excellent Dr. Drang.</p>

<p>Using his script as a base, this is what I landed on:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">small</span> <span class="o">=</span> <span class="s2">"(a|an|and|as|at|but|by|en|for|if|in|of|on|or|the|to|v[.]?|via|vs[.]?)"</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">punct</span> <span class="o">=</span> <span class="s2">"([!\"#$%&amp;'()*+,./:;&lt;=&gt;?@[\\\\\\]^_`{|}~-]*)"</span><span class="p">;</span>
  
    <span class="k">this</span><span class="p">.</span><span class="nx">titleCaps</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">title</span><span class="p">){</span>
        <span class="kd">var</span> <span class="nx">parts</span> <span class="o">=</span> <span class="p">[],</span> <span class="nx">split</span> <span class="o">=</span> <span class="sr">/</span><span class="se">[</span><span class="sr">:.;?!</span><span class="se">]</span><span class="sr"> |</span><span class="se">(?:</span><span class="sr"> |^</span><span class="se">)[</span><span class="sr">"Ò</span><span class="se">]</span><span class="sr">/g</span><span class="p">,</span> <span class="nx">index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        
        <span class="k">while</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="nx">split</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">title</span><span class="p">);</span>

            <span class="nx">parts</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span> <span class="nx">title</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">m</span> <span class="p">?</span> <span class="nx">m</span><span class="p">.</span><span class="nx">index</span> <span class="p">:</span> <span class="nx">title</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
                <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">\b([</span><span class="sr">A-Za-z</span><span class="se">][</span><span class="sr">a-z.'Õ</span><span class="se">]</span><span class="sr">*</span><span class="se">)\b</span><span class="sr">/g</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">all</span><span class="p">){</span>
                    <span class="k">return</span> <span class="sr">/</span><span class="se">[</span><span class="sr">A-Za-z</span><span class="se">]\.[</span><span class="sr">A-Za-z</span><span class="se">]</span><span class="sr">/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">all</span><span class="p">)</span> <span class="p">?</span> <span class="nx">all</span> <span class="p">:</span> <span class="nx">upper</span><span class="p">(</span><span class="nx">all</span><span class="p">);</span>
                <span class="p">})</span>
                <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">"\\b"</span> <span class="o">+</span> <span class="nx">small</span> <span class="o">+</span> <span class="s2">"\\b"</span><span class="p">,</span> <span class="s2">"ig"</span><span class="p">),</span> <span class="nx">lower</span><span class="p">)</span>
                <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">"^"</span> <span class="o">+</span> <span class="nx">punct</span> <span class="o">+</span> <span class="nx">small</span> <span class="o">+</span> <span class="s2">"\\b"</span><span class="p">,</span> <span class="s2">"ig"</span><span class="p">),</span> <span class="kd">function</span><span class="p">(</span><span class="nx">all</span><span class="p">,</span> <span class="nx">punct</span><span class="p">,</span> <span class="nx">word</span><span class="p">){</span>
                    <span class="k">return</span> <span class="nx">punct</span> <span class="o">+</span> <span class="nx">upper</span><span class="p">(</span><span class="nx">word</span><span class="p">);</span>
                <span class="p">})</span>
                <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">"\\b"</span> <span class="o">+</span> <span class="nx">small</span> <span class="o">+</span> <span class="nx">punct</span> <span class="o">+</span> <span class="s2">"$"</span><span class="p">,</span> <span class="s2">"ig"</span><span class="p">),</span> <span class="nx">upper</span><span class="p">));</span>
            
            <span class="nx">index</span> <span class="o">=</span> <span class="nx">split</span><span class="p">.</span><span class="nx">lastIndex</span><span class="p">;</span>
            
            <span class="k">if</span> <span class="p">(</span> <span class="nx">m</span> <span class="p">)</span> <span class="nx">parts</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span> <span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">);</span>
            <span class="k">else</span> <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="nx">parts</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">""</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/ V</span><span class="se">(</span><span class="sr">s</span><span class="se">?)\.</span><span class="sr"> /ig</span><span class="p">,</span> <span class="s2">" v$1. "</span><span class="p">)</span>
            <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">([</span><span class="sr">'Õ</span><span class="se">])</span><span class="sr">S</span><span class="se">\b</span><span class="sr">/ig</span><span class="p">,</span> <span class="s2">"$1s"</span><span class="p">)</span>
            <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">\b(</span><span class="sr">AT&amp;T|Q&amp;A</span><span class="se">)\b</span><span class="sr">/ig</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">all</span><span class="p">){</span>
                <span class="k">return</span> <span class="nx">all</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span>
            <span class="p">});</span>
    <span class="p">};</span>
    
    <span class="kd">function</span> <span class="nx">lower</span><span class="p">(</span><span class="nx">word</span><span class="p">){</span>
        <span class="k">return</span> <span class="nx">word</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span>
    <span class="p">}</span>
    
    <span class="kd">function</span> <span class="nx">upper</span><span class="p">(</span><span class="nx">word</span><span class="p">){</span>
      <span class="k">return</span> <span class="nx">word</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">word</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>

<span class="nx">draft</span><span class="p">.</span><span class="nx">content</span> <span class="o">=</span> <span class="nx">titleCaps</span><span class="p">(</span><span class="nx">draft</span><span class="p">.</span><span class="nx">content</span><span class="p">);</span>
<span class="nx">commit</span><span class="p">(</span><span class="nx">draft</span><span class="p">);</span></code></pre></figure>

<p>To install it, <a href="x-drafts4://x-callback-url/import_action?v=2&amp;tintColor=%5B%0A%0A%5D&amp;shouldConfirm=0&amp;logLevel=1&amp;uuid=FB119A8F-ED30-4CE9-8A5A-CFBC5DE8147D&amp;disposition=0&amp;actionSteps=%5B%0A%20%20%7B%0A%20%20%20%20%22scriptText%22%20%3A%20%22%5C%2F%5C%2F%20Script%20steps%20run%20short%20Javascripts%5Cn%5C%2F%5C%2F%20For%20documentation%20and%20examples%2C%20visit%3A%5Cn%5C%2F%5C%2F%20http%3A%5C%2F%5C%2Fhelp.agiletortoise.com%5Cn%5Cnvar%20small%20%3D%20%5C%22%28a%7Can%7Cand%7Cas%7Cat%7Cbut%7Cby%7Cen%7Cfor%7Cif%7Cin%7Cof%7Con%7Cor%7Cthe%7Cto%7Cv%5B.%5D%3F%7Cvia%7Cvs%5B.%5D%3F%29%5C%22%3B%5Cn%5Ctvar%20punct%20%3D%20%5C%22%28%5B%21%5C%5C%5C%22%23%24%25%26%27%28%29%2A%2B%2C.%5C%2F%3A%3B%3C%3D%3E%3F%40%5B%5C%5C%5C%5C%5C%5C%5C%5C%5C%5C%5C%5C%5D%5E_%60%7B%7C%7D~-%5D%2A%29%5C%22%3B%5Cn%20%20%5Cn%5Ctthis.titleCaps%20%3D%20function%28title%29%7B%5Cn%5Ct%5Ctvar%20parts%20%3D%20%5B%5D%2C%20split%20%3D%20%5C%2F%5B%3A.%3B%3F%21%5D%20%7C%28%3F%3A%20%7C%5E%29%5B%5C%22%C3%92%5D%5C%2Fg%2C%20index%20%3D%200%3B%5Cn%5Ct%5Ct%5Cn%5Ct%5Ctwhile%20%28true%29%20%7B%5Cn%5Ct%5Ct%5Ctvar%20m%20%3D%20split.exec%28title%29%3B%5Cn%5Cn%5Ct%5Ct%5Ctparts.push%28%20title.substring%28index%2C%20m%20%3F%20m.index%20%3A%20title.length%29%5Cn%5Ct%5Ct%5Ct%5Ct.replace%28%5C%2F%5C%5Cb%28%5BA-Za-z%5D%5Ba-z.%27%C3%95%5D%2A%29%5C%5Cb%5C%2Fg%2C%20function%28all%29%7B%5Cn%5Ct%5Ct%5Ct%5Ct%5Ctreturn%20%5C%2F%5BA-Za-z%5D%5C%5C.%5BA-Za-z%5D%5C%2F.test%28all%29%20%3F%20all%20%3A%20upper%28all%29%3B%5Cn%5Ct%5Ct%5Ct%5Ct%7D%29%5Cn%5Ct%5Ct%5Ct%5Ct.replace%28RegExp%28%5C%22%5C%5C%5C%5Cb%5C%22%20%2B%20small%20%2B%20%5C%22%5C%5C%5C%5Cb%5C%22%2C%20%5C%22ig%5C%22%29%2C%20lower%29%5Cn%5Ct%5Ct%5Ct%5Ct.replace%28RegExp%28%5C%22%5E%5C%22%20%2B%20punct%20%2B%20small%20%2B%20%5C%22%5C%5C%5C%5Cb%5C%22%2C%20%5C%22ig%5C%22%29%2C%20function%28all%2C%20punct%2C%20word%29%7B%5Cn%5Ct%5Ct%5Ct%5Ct%5Ctreturn%20punct%20%2B%20upper%28word%29%3B%5Cn%5Ct%5Ct%5Ct%5Ct%7D%29%5Cn%5Ct%5Ct%5Ct%5Ct.replace%28RegExp%28%5C%22%5C%5C%5C%5Cb%5C%22%20%2B%20small%20%2B%20punct%20%2B%20%5C%22%24%5C%22%2C%20%5C%22ig%5C%22%29%2C%20upper%29%29%3B%5Cn%5Ct%5Ct%5Ct%5Cn%5Ct%5Ct%5Ctindex%20%3D%20split.lastIndex%3B%5Cn%5Ct%5Ct%5Ct%5Cn%5Ct%5Ct%5Ctif%20%28%20m%20%29%20parts.push%28%20m%5B0%5D%20%29%3B%5Cn%5Ct%5Ct%5Ctelse%20break%3B%5Cn%5Ct%5Ct%7D%5Cn%5Ct%5Ct%5Cn%5Ct%5Ctreturn%20parts.join%28%5C%22%5C%22%29.replace%28%5C%2F%20V%28s%3F%29%5C%5C.%20%5C%2Fig%2C%20%5C%22%20v%241.%20%5C%22%29%5Cn%5Ct%5Ct%5Ct.replace%28%5C%2F%28%5B%27%C3%95%5D%29S%5C%5Cb%5C%2Fig%2C%20%5C%22%241s%5C%22%29%5Cn%5Ct%5Ct%5Ct.replace%28%5C%2F%5C%5Cb%28AT%26T%7CQ%26A%29%5C%5Cb%5C%2Fig%2C%20function%28all%29%7B%5Cn%5Ct%5Ct%5Ct%5Ctreturn%20all.toUpperCase%28%29%3B%5Cn%5Ct%5Ct%5Ct%7D%29%3B%5Cn%5Ct%7D%3B%5Cn%20%20%20%20%5Cn%5Ctfunction%20lower%28word%29%7B%5Cn%5Ct%5Ctreturn%20word.toLowerCase%28%29%3B%5Cn%5Ct%7D%5Cn%20%20%20%20%5Cn%5Ctfunction%20upper%28word%29%7B%5Cn%5Ct%20%20return%20word.substr%280%2C1%29.toUpperCase%28%29%20%2B%20word.substr%281%29%3B%5Cn%5Ct%7D%5Cn%5Cndraft.content%20%3D%20titleCaps%28draft.content%29%3B%5Cncommit%28draft%29%3B%5Cn%22%2C%0A%20%20%20%20%22actionStepType%22%20%3A%20%22Script%22%0A%20%20%7D%0A%5D&amp;description=&amp;modifiedAt=2016-10-13%2014%3A03%3A20%20%2B0000&amp;name=Title%20Case&amp;iconImageName=action_script">click here</a>.</p>

<p>From a practical standpoint, I set this up as an action key so I can use it easily. Now, all I do is type the idea, hit TI above the keyboard, and then action it off to where belongs.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[11: The Innovator’s Dilemma by Clayton M. Christensen [Bookworm]]]></title>
    <link>http://joebuhlig.com/11-the-innovators-dilemma-by-clayton-m-christensen/</link>
    <pubDate>Wed, 12 Oct 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[bookworm]]></category>


    <category><![CDATA[bookworm]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/11-the-innovators-dilemma-by-clayton-m-christensen/</guid>
    <description>
        <![CDATA[Mike almost put this one down. The business principles discussed are vital but the book itself was a challenge.
]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/bookwormlogo.png" /><p>Mike almost put this one down. The business principles discussed are vital but the book itself was a challenge.
<!--more--></p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Fear of the Weekly Review]]></title>
    <link>http://joebuhlig.com/fear-of-the-weekly-review/</link>
    <pubDate>Mon, 10 Oct 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[reviews]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/fear-of-the-weekly-review/</guid>
    <description>
        <![CDATA[I’m all about reviews. I think their value greatly outweighs the time involved and energy expended. Most of the time it’s easy for me to initiate a review and step through its checklist, but there are days when I see a weekly review coming up on the calendar and start...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/fear-of-the-weekly-review.jpeg" /><p>I’m all about reviews. I think their value greatly outweighs the time involved and energy expended. Most of the time it’s easy for me to initiate a review and step through its checklist, but there are days when I see a weekly review coming up on the calendar and start dreading it immediately.
<!--more--></p>

<p>It’s simple really. My dread is rooted in fear, which is a bit odd to say at first. There is a large group of GTDers who find no value in a weekly review and they often cite their hatred for the practice and the amount of time necessary to complete it. Or they do a smaller, broken up version of a weekly review on a daily basis because it’s overwhelming to do it all it once. But if you look at all of these cases through the lens of fear, you can see surprising similarities.</p>

<p>When I start to fear the weekly review, it’s often because I fell short of my goals for the week, feel overloaded, have to say “no” to projects I love, or haven’t done my due diligence to empty my mind. Doing a weekly review will force me to do un-fun work and make decisions I don’t want to make. But when I’ve achieved my weekly goals and faithfully captured my ideas, I look forward to the review because I know it will validate my success.</p>

<p>When GTDers (myself included) choose to put off the weekly review, it’s often due to fear of what we’ll learn as opposed to time constraints. If it’s valuable, we’ll make time for it. I would even argue that the weekly review is what allows you to trust your system and the foundation of its successful use.</p>

<p>If you’ve sworn off the weekly review or broken it down into smaller daily pieces, why is that? Is there a fear of what you’ll see? Can you trust the system if you don’t regularly validate its accuracy? When do you step back and look at the overall picture of your commitments?</p>

<p>If you’re like me, the times when you fear the weekly review are the times it’s the most important to complete.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Changing Prices On… Everything]]></title>
    <link>http://joebuhlig.com/changing-prices-on-everything/</link>
    <pubDate>Fri, 07 Oct 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[pricing]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/changing-prices-on-everything/</guid>
    <description>
        <![CDATA[One of my most hated tasks is setting the price for a new product. It’s painful and it seems like I can never get it right. The bright side is that I’ve been able to learn a lot in the process and that has led me to a price simplification,...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/changing-prices-on-everything.jpeg" /><p>One of my most hated tasks is setting the price for a new product. It’s painful and it seems like I can never get it right. The bright side is that I’ve been able to learn a lot in the process and that has led me to a price simplification, effective immediately.
<!--more--></p>

<p>Let’s start with the popular one, <a href="https://workingwithomnifocus.com"><em>Working With OmniFocus</em></a>. When I originally released it as a book, it was $17 at launch and moved to $22 dollars a week later. This worked well from a financial standpoint but it led to a number of emails from folks who missed the early discount. I have no issues with people asking about it, but it took time I wasn’t expecting to give. And from a long term business stance, it also means that potential buyers may hold off on making a purchase thinking the price may come down again in the future. As opposed to playing these discount games, I’d rather it be set and consistent.</p>

<p>When <em>Working With OmniFocus</em> moved to a video course it seemed logical to me (and friends in the business) that raising the price to $37 was easily justified if not a little low. That may be true if I’m trying to make it a more exclusive membership, but I’m not. I would rather it be in the hands of more people and have a broader impact. Following basic supply and demand principles, that means the current price needs to be reconsidered.</p>

<p><a href="https://workingwithideas.co"><em>Working With Ideas</em></a> was plagued with many of the same issues. It was a lot more intensive to develop and after consulting others who have done something similar, I landed on $72. Again, this creates the feeling of exclusivity that I’m <em>not</em> shooting for. Especially considering I’ve left it at the introductory price due to a lack of interest.</p>

<p>And then there’s Working With Alfred. This one is extremely new on the horizon and has a long way to go yet. But the pricing discussion for this one is the same. Where should it land and how can I price it to be accessible to a large number of users while covering my costs?</p>

<p>One thing I’ve learned in my pricing adventure is that I love simplicity and consistency. I also place value in reaching higher numbers of people with the resources I create. So that means I want to bring everything to a uniform price, preferably at the lower end of my comfort zone. Based on my experience and trusting my intuition, that leads me to $17 for each.</p>

<p>So effective today, <em>Working With OmniFocus</em> and <em>Working With Ideas</em> are each <strong>$17</strong>. And I’m no longer doing discounts or release pricing. It’s also means that when Working With Alfred is released it’ll be $17 as well. I’m keeping it simple and dependable.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Multiple Lines in Drafts to Multiple Tasks in OmniFocus]]></title>
    <link>http://joebuhlig.com/multiple-lines-in-drafts-to-multiple-tasks-in-omnifocus/</link>
    <pubDate>Mon, 03 Oct 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[drafts]]></category>

    <category><![CDATA[omnifocus]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/multiple-lines-in-drafts-to-multiple-tasks-in-omnifocus/</guid>
    <description>
        <![CDATA[One piece missing in my Drafts actions arsenal was the ability to create a single draft with multiple tasks and send them all to OmniFocus via the new URL schemes. This isn’t something I use often but there are times when it would be useful and can be the difference...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/multiple-lines-in-drafts-to-multiple-tasks-in-omnifocus.jpg" /><p>One piece missing in my Drafts actions arsenal was the ability to create a single draft with multiple tasks and send them all to OmniFocus via the new URL schemes. This isn’t something I use often but there are times when it would be useful and can be the difference between capturing everything and missing a vital thought.
<!--more--></p>

<p>So here we are. I made one. You can <a href="x-drafts4://x-callback-url/import_action?v=2&amp;tintColor=%5B%0A%20%200.451%2C%0A%20%200.29%2C%0A%20%200.553%0A%5D&amp;shouldConfirm=0&amp;logLevel=1&amp;uuid=5E08F0B3-C571-4996-A264-85A42A72C277&amp;disposition=2&amp;actionSteps=%5B%0A%20%20%7B%0A%20%20%20%20%22scriptText%22%20%3A%20%22%5C%2F%5C%2F%20Script%20steps%20run%20short%20Javascripts%5Cn%5C%2F%5C%2F%20For%20documentation%20and%20examples%2C%20visit%3A%5Cn%5C%2F%5C%2F%20http%3A%5C%2F%5C%2Fhelp.agiletortoise.com%5Cn%5Cnvar%20text%20%3D%20%5C%22%5C%22%3B%5Cnvar%20tasks%20%3D%20draft.content.split%28%5C%22%5C%5Cn%5C%22%29%3B%5Cnfor%20%28i%20in%20tasks%29%20%7B%5Cntext%20%2B%3D%20encodeURIComponent%28%5C%22-%20%5C%22%20%2B%20tasks%5Bi%5D%20%2B%20%5C%22%5C%5Cn%5C%22%29%3B%5Cn%7D%3B%5Cn%5Cndraft.defineTag%28%5C%22OFTasks%5C%22%2C%20text%29%3B%22%2C%0A%20%20%20%20%22actionStepType%22%20%3A%20%22Script%22%0A%20%20%7D%2C%0A%20%20%7B%0A%20%20%20%20%22actionStepType%22%20%3A%20%22URL%22%2C%0A%20%20%20%20%22urlTemplate%22%20%3A%20%22omnifocus%3A%5C%2F%5C%2F%5C%2Fpaste%3Ftarget%3Dinbox%26content%3D%5B%5BOFTasks%5D%5D%22%2C%0A%20%20%20%20%22useSafariViewController%22%20%3A%20false%2C%0A%20%20%20%20%22encodeTags%22%20%3A%20false%0A%20%20%7D%0A%5D&amp;description=&amp;modifiedAt=2016-09-28%2020%3A21%3A37%20%2B0000&amp;name=OmniFocus%20-%20Multiple&amp;iconImageName=action_reminder">install it here</a>.</p>

<p>For those interested, it uses a JavaScript step that breaks each line of the draft apart and reassembles them in taskpaper format. This new string is stored in a new tag that can be used in the URL step.</p>

<p>Here’s what the JavaScript looks like:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">text</span> <span class="o">=</span> <span class="s2">""</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">tasks</span> <span class="o">=</span> <span class="nx">draft</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">);</span>
<span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">tasks</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">text</span> <span class="o">+=</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="s2">"- "</span> <span class="o">+</span> <span class="nx">tasks</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="s2">"\n"</span><span class="p">);</span>
<span class="p">};</span>

<span class="nx">draft</span><span class="p">.</span><span class="nx">defineTag</span><span class="p">(</span><span class="s2">"OFTasks"</span><span class="p">,</span> <span class="nx">text</span><span class="p">);</span></code></pre></figure>

<p>And here’s the URL step:</p>

<figure class="highlight"><pre><code class="language-text" data-lang="text">omnifocus:///paste?target=inbox&amp;content=[[OFTasks]]</code></pre></figure>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Time For a Refresh]]></title>
    <link>http://joebuhlig.com/time-for-a-refresh/</link>
    <pubDate>Fri, 30 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[development]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/time-for-a-refresh/</guid>
    <description>
        <![CDATA[This past weekend my wife was gone on a retreat. That meant I took care of our girls on my own. They go to bed about an hour and a half before I do, and like any self-respecting web developer with an aging web design, I took advantage of the...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/time-for-a-refresh.jpg" /><p>This past weekend my wife was gone on a retreat. That meant I took care of our girls on my own. They go to bed about an hour and a half before I do, and like any self-respecting web developer with an aging web design, I took advantage of the extra free time and made some major changes to the look and feel of my home on the web.
<!--more--></p>

<p>The biggest change here are the layouts of the header and article feeds. Headers are always a challenge because you want them to be unique but they need to follow intuitive interface standards. This one took me 20+ iterations to get right and to feel good about. In the end, I wanted it to be simple to understand and easy to find what you’re looking for.</p>

<p>Compared to the article feed layout, the header was simple. I went through 40+ versions of the layout, colors, and metadata to show. I know that there are a lot of factors that I personally look at when deciding to read an article. And I understand the frustration of not being able to find that one piece of data you need to get the context of the post. So I did my best to call out the date, tags, and length of each post so it’s easy to get the background of the article before you jump in.</p>

<p>To go along with the look and feel is the new ability to use a dark or light theme. I stole this idea from Federico Viticci over on <a href="https://www.macstories.net">MacStories</a>. I love his implementation of it and built my own version. Since it’s my blog and I’m a huge fan of dark themes, I made the dark theme default. You can switch back to the light theme with the theme toggle in the header. Though, I’m not sure why you would do that.</p>

<p>The last change worth noting is search. I moved over to <a href="http://lunrjs.com/">lunar.js</a> to calculate the results for the search. This is primarily due to my use of <a href="http://jekyllrb.com/">Jekyll</a> as a site generator. Lunar makes it a lot easier since I don’t have any server-side methods I can use to generate the search results. You can use the search box in the header or by visiting the <a href="/search">dedicated search page</a>.</p>

<p>Overall, I’m really happy with this new setup and excited to share with you. But I’m very aware that redesigns like this often come with unexpected bugs. If you find an issue, please let me know about it in the <a href="#discourse-comments">discussion below</a>.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Zen & The Art of Work]]></title>
    <link>http://joebuhlig.com/zen-the-art-of-work/</link>
    <pubDate>Thu, 29 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[reviews]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/zen-the-art-of-work/</guid>
    <description>
        <![CDATA[I’ve always admired the thought and intentionality that Kourosh Dini applies to his methods of working and developing structures that help him accomplish his tasks. So I was excited when he gave me the opportunity to go through his video course, Zen &amp; The Art of Work, prior to its...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/zen-the-art-of-work.jpg" /><p>I’ve always admired the thought and intentionality that Kourosh Dini applies to his methods of working and developing structures that help him accomplish his tasks. So I was excited when he gave me the opportunity to go through his video course, <a href="https://gumroad.com/a/753349747"><em>Zen &amp; The Art of Work</em></a>, prior to its launch. I must say that I think this is his best work to date.
<!--more--></p>

<p>Dini has a reputation for writing in-depth, thought-provoking books and those books were instrumental in guiding me to develop my own processes. But he’s now taking another step in the creation of video modules that illustrate what I would call a combination of <em>Deep Work</em> and <em>Getting Things Done</em>.</p>

<p>I’ve been a practitioner of GTD for a long time and a recent convert to the concept of Deep Work sessions. Dini is able to use visual representations in conjunction with practical examples of how these concepts work together in real life scenarios. Because of this, <em>Zen &amp; The Art of Work</em> is one of (if not the) best demonstrations of how these principles can lead to the calm, intentional practice of getting work done that matters.</p>

<p>I have to confess that I was surprised by the number of takeaways I had after completing the course. Some are simple, almost obvious. Others were completely new to me:</p>

<ul>
  <li>Pause before going onto the next task.</li>
</ul>

<p>I have a habit of just working down a list. A simple pause between tasks can help me be more intentional about what I’m doing. It becomes a way to prevent any haphazard ways of working.</p>

<ul>
  <li>Be with the work.</li>
</ul>

<p>Like most information workers, I deal with almost constant desire to procrastinate. Dini introduced me to this idea of just being in the presence of the work to be completed and doing nothing else. And I can tell you that the amount of self-control necessary to start the work, once you put yourself in the presence of the work, is much less with this practice in place.</p>

<ul>
  <li>Designing work sessions.</li>
</ul>

<p>I had never thought about work being done in sessions prior to reading <em>Deep Work</em>. I had loosely practiced this but never intentionally. Dini is able to carefully articulate how work sessions can be initiated and focused in a way that sets you up for following through on your intentions. He gave me a clarity about sessions that I had been seeking.</p>

<ul>
  <li>Process inboxes after each session.</li>
</ul>

<p>In the past I’ve been consistent in clearing my inboxes every morning. But Dini suggests clearing them at the end of every work session. This is mostly due to his recommendations on how to leverage the power of an inbox while in the middle of a session, but it has me clearing “in” more often each day. And the mental freedom that has come with it has been surprising. It is certainly a practice I intend to maintain.</p>

<ul>
  <li>Dini’s music is excellent for work sessions.</li>
</ul>

<p>As part of the course you get a bonus album of Dini’s music. I have long been searching for soothing music that is suited for my writing time and have yet to discover anything as perfectly suited as this album. I’ve known Kourosh composes songs for a while but for some reason I’ve never listened in the past.</p>

<p><a href="https://gumroad.com/a/753349747"><em>Zen &amp; The Art of Work</em></a> is an excellent course for those looking to be intentional with the work they do. It’s perfectly suited for newcomers to the productivity space and will be at the top of my list of recommendations for where to start. But it’s also a great resource for those who’ve been at it for a while. The real world examples are invaluable and Dini can easily demonstrate how to implement these concepts. I highly recommended this course.</p>

<p>For more information on the course, you can visit <a href="http://www.zenandtheartofwork.com">zenandtheartofwork.com</a>.</p>

<p><small><strong>Disclaimer:</strong> I was given a free copy of the course for this review and it includes affiliate links. I can honestly say my opinion of the course hasn’t been colored by this fact, but regardless, it’s something I felt you should know.</small></p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[10: Start With Why by Simon Sinek [Bookworm]]]></title>
    <link>http://joebuhlig.com/10-start-with-why-by-simon-sinek/</link>
    <pubDate>Wed, 28 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[bookworm]]></category>


    <category><![CDATA[bookworm]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/10-start-with-why-by-simon-sinek/</guid>
    <description>
        <![CDATA[This week Mike and Joe talk about the value of finding a “why” in everything we do and what happens when companies start with “how” or “what.”
]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/bookwormlogo.png" /><p>This week Mike and Joe talk about the value of finding a “why” in everything we do and what happens when companies start with “how” or “what.”
<!--more--></p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Targeted OmniFocus Templates With Workflow]]></title>
    <link>http://joebuhlig.com/targeted-omnifocus-templates-with-workflow/</link>
    <pubDate>Mon, 26 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[omnifocus]]></category>

    <category><![CDATA[workflow]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/targeted-omnifocus-templates-with-workflow/</guid>
    <description>
        <![CDATA[I’ve been impressed by the speed of the Omni Group’s release cycles lately. It’s obvious they are hard at work on the automation methods for both iOS and macOS. One of these recent releases introduced the ability to create new projects within a specific folder on iOS.

]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/targeted-omnifocus-templates-with-workflow.jpg" /><p>I’ve been impressed by the speed of the Omni Group’s release cycles lately. It’s obvious they are hard at work on the automation methods for both iOS and macOS. One of these recent releases introduced the ability to create new projects within a specific folder on iOS.
<!--more--></p>

<p>It’s pretty straight-forward. You use the <code class="highlighter-rouge">/paste</code> URL as before but replace <code class="highlighter-rouge">target=projects</code> with <code class="highlighter-rouge">target=/folder/FOLDERNAME</code>, so you now get something like this:</p>

<p><code class="highlighter-rouge">omnifocus:///paste?target=/folder/Articles&amp;content=TASKPAPERCONTENT</code></p>

<p>This opens a lot of doors, but I prefer to keep things simple by using a single Workflow. This new Workflow takes a text file in DropBox (containing a taskpaper template), replaces any placeholders (using this format: <code class="highlighter-rouge">«PLACEHOLDER»</code>), and places the new project in the folder you choose from the menu.</p>

<p>You can <a href="https://workflow.is/workflows/86f951099b6d40fcacfe7b0e4ab41d65">get this Workflow here</a>.</p>

<p>If you look through the steps, you’ll see an action that looks like this:</p>

<center><img class="post-image-mini" src="http://joebuhlig.com/assets/posts_extra/targeted-omnifocus-templates-with-workflow/workflow-targets.png" /></center>

<p>These are the selectable targets in the Workflow. You’ll want to alter these to fit your structure. Just pay attention to the text and variable assignment under each choice and be sure to copy that format.</p>

<p>In the end, this allows me to pinpoint where I want my templated projects to land within OmniFocus without needing to manually move it after creation.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Using Gmail Permalinks [Video]]]></title>
    <link>http://joebuhlig.com/using-gmail-permalinks/</link>
    <pubDate>Fri, 23 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[video]]></category>


    <category><![CDATA[email]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/using-gmail-permalinks/</guid>
    <description>
        <![CDATA[Earlier this week, I published an article eluding to my use of Gmail’s permalinks. It sparked a number of unexpected questions about how to get them and how I use them on both macOS and iOS. But rather than write it out, I figured a screencast would help convey the...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/using-gmail-permalinks.jpg" /><p>Earlier this week, I <a href="http://joebuhlig.com/forget-third-party-email-apps/">published an article</a> eluding to my use of Gmail’s permalinks. It sparked a number of unexpected questions about how to get them and how I use them on both macOS and iOS. But rather than write it out, I figured a screencast would help convey the process better.
<!--more--></p>

<p>Here are the Workflows I mentioned in the video:</p>

<p><a href="https://workflow.is/workflows/171d34ef202843ec9882f1cb9fcb6858">Open Gmail Permalink on iOS - Workflow</a></p>

<p><a href="https://workflow.is/workflows/3295578bd1564f388ff52d5ca1835418">My Altered Workflow</a></p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Forget Third Party Email Apps]]></title>
    <link>http://joebuhlig.com/forget-third-party-email-apps/</link>
    <pubDate>Mon, 19 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[apps]]></category>

    <category><![CDATA[email]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/forget-third-party-email-apps/</guid>
    <description>
        <![CDATA[Folks are quite passionate about the software they use to access their email. I fell in that camp for a while but anymore I just don’t get it. I think that stems from my intent to touch emails only once, keep my inbox as empty as possible, and use a...]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/forget-third-party-email-apps.jpeg" /><p>Folks are quite passionate about the software they use to access their email. I fell in that camp for a while but anymore I just don’t get it. I think that stems from my intent to touch emails only once, keep my inbox as empty as possible, and use a single archive folder for all emails I want to keep.
<!--more--></p>

<p>My needs in an email app are just as simple. I need an easy way to move an email to either an archive or the trash. That’s it. And since there’s an internet connection and a Mac with me 99.9% of the times I check email, I do all of it in the browser with Gmail.</p>

<p>That means I have no need for integrations with other apps because I always have a URL to reference an email. I can always grab the link, drop it into a notes field, or save it as part of a reference document. It also means the email is always a click away.</p>

<p>I have no need for fancy folder structures and snoozing mechanisms. They don’t make sense to me. It’s an extra layer of complexity and decision deferment that delays progress on the requests represented in the emails. I don’t want to postpone my action on it for later, I make the decision the first time I see it.</p>

<p>When I read reviews or hear comparisons of new email apps, I’m usually left asking “why?” Why are all these extra features necessary? Why is everyone trying to solve the “email problem?” The extra bells and whistles won’t make your decisions for you. It won’t write your responses for you. That’s up to you.</p>

<p>We all get email. Some of us get a lot more than others. And if you feel you have an email problem, <em>you</em> need to do something about it. The issue isn’t the app. Don’t complicate matters looking for a third party app. Keep it dead simple and own your decisions. You’ll feel a lot better in the end.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[Building Systems You Won't Use]]></title>
    <link>http://joebuhlig.com/building-systems-you-wont-use/</link>
    <pubDate>Fri, 16 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[blog]]></category>


    <category><![CDATA[systems]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/building-systems-you-wont-use/</guid>
    <description>
        <![CDATA[I’m always looking for a way to automate a process or develop a structure that removes steps from a frequently repeated task. That’s to be expected since I enjoy the world of productivity and do a fair amount of development.

]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/building-systems-you-wont-use.jpeg" /><p>I’m always looking for a way to automate a process or develop a structure that removes steps from a frequently repeated task. That’s to be expected since I enjoy the world of productivity and do a fair amount of development.
<!--more--></p>

<p>But building new systems to increase efficiency and accomplish new actions used to be relegated to the Mac or PC. You can write scripts and code there that do really sophisticated tasks. The only limit is your imagination and time devoted to it.</p>

<p>With the creation of apps such as <a href="https://itunes.apple.com/us/app/workflow-powerful-automation/id915249334?mt=8&amp;at=1l3vnyQ">Workflow</a>, <a href="https://itunes.apple.com/us/app/launch-center-pro-shortcut/id532016360?mt=8&amp;at=1l3vnyQ">Launch Center Pro</a>, and <a href="https://itunes.apple.com/us/app/editorial/id673907758?mt=8&amp;at=1l3vnyQ">Editorial</a>, the system building process has more or less made its way onto iOS. And I leverage these heavily in my daily iPhone use.</p>

<p>Although this ability comes with a plethora of benefits, it also comes with a very large downside: <em>time consumption</em>.</p>

<p>My general rule of thumb for development and systems building is “if you can think it, you can build it.” If you have an idea for a script or a new system, you can generally make it happen given enough time and resources. Yes, there are occasions that this assumption falls down, but in my experience it generally holds true.</p>

<p>If you combine this assumption with the flexibility, ease, and novelty of an app like Workflow, it’s easy to find yourself looking for ways to use it. “It has so much power, I should use it for <strong>__</strong><em>__</em>.” And new workflows are fun to build, so you get to “work” on a new process that will help you later.</p>

<p>The trouble is that it’s time-consuming to build these new systems and since we utilize an app just because we can, we end up building things that serve no real purpose in our daily activities. It’s cool that you can turn a series of pictures into a GIF but how often do you need to do that? Is it really necessary to spend time building these out if you’re only going to use it a couple times, if ever?</p>

<p>My point is this: don’t waste time building new systems just because you can or you think there might be a use for it. Determine the need up front and then get to work. Make sure it has a necessary and legitimate use before you spend time creating it.</p>
]]>
    </content:encoded>
</item>

<item>
    <title><![CDATA[9: Daring Greatly by Brené Brown [Bookworm]]]></title>
    <link>http://joebuhlig.com/9-daring-greatly-by-brene-brown/</link>
    <pubDate>Wed, 14 Sep 2016 00:00:00 -0500</pubDate>
    <dc:creator><![CDATA[joe_buhlig]]></dc:creator>

    <category><![CDATA[bookworm]]></category>


    <category><![CDATA[bookworm]]></category>

    <guid isPermaLink="true">http://joebuhlig.com/9-daring-greatly-by-brene-brown/</guid>
    <description>
        <![CDATA[We’re trying a different flavor of book this time and discussing our relationships and feelings with Brené Brown’s Daring Greatly.
]]>
    </description>
    <content:encoded>
        <![CDATA[<img class="featured-image" src="http://joebuhlig.com/assets/posts/bookwormlogo.png" /><p>We’re trying a different flavor of book this time and discussing our relationships and feelings with Brené Brown’s Daring Greatly.
<!--more--></p>
]]>
    </content:encoded>
</item>


</channel>

</rss>